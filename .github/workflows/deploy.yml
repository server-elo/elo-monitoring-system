name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
      
      - name: Build application
        run: npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  request-approval:
    needs: build-and-push
    runs-on: ubuntu-latest
    outputs:
      approval_id: ${{ steps.request.outputs.approval_id }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Request deployment approval
        id: request
        run: |
          node -e "
          const request = {
            environment: 'production',
            version: '${{ github.sha }}',
            changes: [
              'Updated from commit: ${{ github.event.head_commit.message }}'
            ],
            risksAssessed: true,
            testsPassed: true,
            approvers: ['${{ github.actor }}']
          };
          
          console.log('Requesting deployment approval...');
          console.log(JSON.stringify(request, null, 2));
          
          // Simulate approval request
          const approvalId = 'approval-' + Date.now();
          console.log('::set-output name=approval_id::' + approvalId);
          "
      
      - name: Notify approvers
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          custom_payload: |
            {
              text: "Deployment approval requested for Solidity Learning Platform",
              attachments: [{
                color: "warning",
                fields: [
                  { title: "Environment", value: "Production", short: true },
                  { title: "Version", value: "${{ github.sha }}", short: true },
                  { title: "Requested by", value: "${{ github.actor }}", short: true },
                  { title: "Approval ID", value: "${{ steps.request.outputs.approval_id }}", short: true }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  deploy:
    needs: request-approval
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Wait for approval
        run: |
          echo "Waiting for manual approval in GitHub Actions..."
          echo "Approval ID: ${{ needs.request-approval.outputs.approval_id }}"
      
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/solidity-learning
            docker-compose pull
            docker-compose up -d
            docker system prune -af
            
            # Record deployment
            echo "Deployment completed at $(date)" >> deployments.log
            echo "Version: ${{ github.sha }}" >> deployments.log
            echo "Approved via: ${{ needs.request-approval.outputs.approval_id }}" >> deployments.log