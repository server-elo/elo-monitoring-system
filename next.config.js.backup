/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  poweredByHeader: false,
  
  // CRITICAL: Force webpack mode, completely disable Turbopack
  experimental: {
    // Remove turbo option entirely to avoid warning
    esmExternals: true,
  },
  
  // Minimal webpack config to avoid runtime issues
  webpack: (config, { dev, isServer }) => {
    // Only add fallbacks for client-side
    if (!isServer) {
      config.resolve.fallback = {
        fs: false,
        net: false,
        tls: false,
      };
    }
    
    return config;
  },
  
  // Ignore build errors temporarily to focus on chunk issues
  typescript: {
    ignoreBuildErrors: true,
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  
  // External packages
  serverExternalPackages: ['@prisma/client'],
  
  // Image configuration
  images: {
    domains: ['avatars.githubusercontent.com', 'lh3.googleusercontent.com'],
    unoptimized: true, // Disable image optimization in dev
  },
  
  // Remove standalone output which can cause runtime issues
  // output: 'standalone',
  
  // Disable compression in dev to avoid chunk issues
  compress: false,
  
  // Custom headers to prevent caching issues
  async headers() {
    return [
      {
        source: '/_next/static/:path*',
        headers: [
          {
            key: 'Cache-Control',
            value: 'no-cache, no-store, must-revalidate',
          },
        ],
      },
    ];
  },
};

module.exports = nextConfig;